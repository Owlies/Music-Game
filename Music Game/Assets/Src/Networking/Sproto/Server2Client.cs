// Generated by sprotodump. DO NOT EDIT!
// source: ./../content/Server2Client.sproto

using System;
using Sproto;
using System.Collections.Generic;

namespace SprotoType { 
	public class LoginResponse : SprotoTypeBase {
		private static int max_field_count = 2;
		
		
		private Int64 _state; // tag 0
		public Int64 state {
			get { return _state; }
			set { base.has_field.set_field (0, true); _state = value; }
		}
		public bool HasState {
			get { return base.has_field.has_field (0); }
		}

		private string _message; // tag 1
		public string message {
			get { return _message; }
			set { base.has_field.set_field (1, true); _message = value; }
		}
		public bool HasMessage {
			get { return base.has_field.has_field (1); }
		}

		public LoginResponse () : base(max_field_count) {}

		public LoginResponse (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.state = base.deserialize.read_integer ();
					break;
				case 1:
					this.message = base.deserialize.read_string ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.state, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_string (this.message, 1);
			}

			return base.serialize.close ();
		}
	}


}

